/* This is a mst-gql generated file, don't modify it manually */
/* eslint-disable */
/* tslint:disable */

import { types } from "mobx-state-tree"
import { QueryBuilder } from "mst-gql"
import { ModelBase } from "./ModelBase"
import { BenefitModel, BenefitModelType } from "./BenefitModel"
import { BenefitModelSelector } from "./BenefitModel.base"
import { RootStoreType } from "./index"


/**
 * AddFavoritePayloadBase
 * auto generated base class for the model AddFavoritePayloadModel.
 *
 * Autogenerated return type of AddFavorite
 */
export const AddFavoritePayloadModelBase = ModelBase
  .named('AddFavoritePayload')
  .props({
    __typename: types.optional(types.literal("AddFavoritePayload"), "AddFavoritePayload"),
    benefit: types.union(types.undefined, types.null, types.late((): any => BenefitModel)),
    /** A unique identifier for the client performing the mutation. */
    clientMutationId: types.union(types.undefined, types.null, types.string),
    message: types.union(types.undefined, types.null, types.string),
  })
  .views(self => ({
    get store() {
      return self.__getStore<RootStoreType>()
    }
  }))

export class AddFavoritePayloadModelSelector extends QueryBuilder {
  get clientMutationId() { return this.__attr(`clientMutationId`) }
  get message() { return this.__attr(`message`) }
  benefit(builder?: string | BenefitModelSelector | ((selector: BenefitModelSelector) => BenefitModelSelector)) { return this.__child(`benefit`, BenefitModelSelector, builder) }
}
export function selectFromAddFavoritePayload() {
  return new AddFavoritePayloadModelSelector()
}

export const addFavoritePayloadModelPrimitives = selectFromAddFavoritePayload().clientMutationId.message
